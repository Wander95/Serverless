# ./serverless.yml
service: serverless-adoring-virus-lambda

plugins:
  # - serverless-esbuild # used for compiling/packaging the Typescript code
  - serverless-plugin-typescript
  - serverless-plugin-monorepo
  - serverless-tscpaths
  - serverless-dynamodb
  - serverless-offline # used for local execution
           
provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    PRODUCT_TABLE: product_table
    STOCK_TABLE: stock_table
  httpApi:
    name: serverless-adoring-virus-lambda-http
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.PRODUCT_TABLE}"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.STOCK_TABLE}"

functions:
  get_all_products:
    handler: ./functions/get-all/src/index.handler
    events:
      - httpApi:
          path: /api/products
          method: GET

  get_product_by_id:
    handler: ./functions/get-by-id/src/index.handler
    events:
      - httpApi:
          path: /api/products/{id}
          method: GET

  create_product:
    handler: ./functions/create/src/index.handler
    events:
      - httpApi:
          path: /api/products
          method: POST


resources:
  - ${file(resources/stock-table.yml)}
  - ${file(resources/product-table.yml)}
